# mining #

options:
    prefix: %fontimage "fonts:zana_tag"% &7▪&f

command /forest:
    aliases: /ftp
    trigger:
        teleport player to {forest}

on first join:
    set {foraging::needed_xp::%uuid of player%} to 50
    set {foraging::xp::%uuid of player%} to 0
    set {foraging::level::%uuid of player%} to 0
    set {claimed_axe::%uuid of player%} to true
    give_Axe(player)

on join:
    if {claimed_axe::%uuid of player%} != true:
        set {foraging::needed_xp::%uuid of player%} to 50
        set {foraging::xp::%uuid of player%} to 0
        set {foraging::level::%uuid of player%} to 0
        set {claimed_axe::%uuid of player%} to true
        give_Axe(player)

function give_Axe(p: player):
    set {_rod} to diamond axe named "&2🪓&a🪓&f🪓 &a&lTREE SLICER &f🪓&a🪓&2🪓" with lore ("&8Foraging Tool", "", " &f→ &aTree Chop 0", " &f→ &aTumble 0", " &f→ &aFlowering Season 0", " &f→ &aWoodpecker 0", " &f→ &aHacked 0", "", "&7Visit the Foraging Station") with all flags hidden
    enchant {_rod} with efficiency 5
    give {_p} 1 of {_rod}
    
function axe_Upgrade(p: player):
    create a gui with virtual chest inventory with 3 rows named "Tree Slicer Station":
        make gui slot (all integers between 0 and 26) with black stained glass pane named "&7" with all flags hidden
        set {_lure} to int tag "chop" of nbt of {_p}'s tool
        make gui slot 11 with netherite axe named "&aTree Chop" with lore ("&8Enchant", "", " &f→ This enchant has the chance to", " &f→ mine wood in radius of 3!", "", " &f→ Level &a%{_lure}%&7/&c5", "", " &f→ &fCost &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*400)%", "", "&7Click to enchant"):
            if {_lure} >= 5:
                send "{@prefix} You can't buy this Tree Chop upgrade" to {_p}
                close inventory of {_p}
            else if {tokens::%uuid of {_p}%}+0 >= ({_lure}+1)*400:
                set int tag "chop" of nbt of {_p}'s tool to ({_lure})+1
                set line 3 of lore of {_p}'s tool to " &f→ &aTree Chop %{_lure}+1%"
                remove (({_lure}+1)*400) from {tokens::%uuid of {_p}%}
                close inventory of {_p}
                send "{@prefix} You have upgraded your Tree Chop enchant!" to {_p}
            else:
                send "{@prefix} You need &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*400)% &fTokens to buy this Tree Chop upgrade" to {_p}
                close inventory of {_p}
        set {_lure} to int tag "tumble" of nbt of {_p}'s tool
        make gui slot 12 with dead bush named "&aTumble" with lore ("&8Enchant", "", " &f→ This enchant has the chance", " &f→ to break all wood for double!", "", " &f→ Level &a%{_lure}%&7/&c3", "", " &f→ &fCost &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*750)%", "", "&7Click to enchant"):
            if {_lure} >= 3:
                send "{@prefix} You can't buy this Tumble upgrade" to {_p}
                close inventory of {_p}
            else if {tokens::%uuid of {_p}%}+0 >= ({_lure}+1)*750:
                set int tag "tumble" of nbt of {_p}'s tool to ({_lure})+1
                set line 4 of lore of {_p}'s tool to " &f→ &aTumble %{_lure}+1%"
                remove (({_lure}+1)*750) from {tokens::%uuid of {_p}%}
                close inventory of {_p}
                send "{@prefix} You have upgraded your Tumble enchant!" to {_p}
            else:
                send "{@prefix} You need &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*750)% &fTokens to buy this Tumble upgrade" to {_p}
                close inventory of {_p}
        set {_lure} to int tag "flowering" of nbt of {_p}'s tool
        make gui slot 13 with tnt named "&aFlowering Season" with lore ("&8Enchant", "", " &f→ This enchant has the chance", " &f→ to give tokens without breaking the block!", "", " &f→ Level &a%{_lure}%&7/&c15", "", " &f→ &fCost &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*300)%", "", "&7Click to enchant"):
            if {_lure} >= 15:
                send "{@prefix} You can't buy this Flowering Season upgrade" to {_p}
                close inventory of {_p}
            else if {tokens::%uuid of {_p}%}+0 >= ({_lure}+1)*300:
                set int tag "flowering" of nbt of {_p}'s tool to ({_lure})+1
                set line 5 of lore of {_p}'s tool to " &f→ &aFlowering Season %{_lure}+1%"
                remove (({_lure}+1)*300) from {tokens::%uuid of {_p}%}
                close inventory of {_p}
                send "{@prefix} You have upgraded your Flowering Season enchant!" to {_p}
            else:
                send "{@prefix} You need &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*300)% &fTokens to buy this Flowering Season upgrade" to {_p}
                close inventory of {_p}
        set {_lure} to int tag "crate" of nbt of {_p}'s tool
        make gui slot 14 with tripwire hook named "&aWoodpecker" with lore ("&8Enchant", "", " &f→ This enchant has the chance", " &f→ to gain keys while mining.", "", " &f→ Level &a%{_lure}%&7/&c20", "", " &f→ &fCost &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*500)%", "", "&7Click to enchant"):
            if {_lure} >= 20:
                send "{@prefix} You can't buy this Woodpecker upgrade" to {_p}
                close inventory of {_p}
            else if {tokens::%uuid of {_p}%}+0 >= ({_lure}+1)*500:
                set int tag "crate" of nbt of {_p}'s tool to ({_lure})+1
                set line 6 of lore of {_p}'s tool to " &f→ &aWoodpecker %{_lure}+1%"
                remove (({_lure}+1)*500) from {tokens::%uuid of {_p}%}
                close inventory of {_p}
                send "{@prefix} You have upgraded your Woodpecker enchant!" to {_p}
            else:
                send "{@prefix} You need &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*500)% &fTokens to buy this Woodpecker upgrade" to {_p}
                close inventory of {_p}
        set {_lure} to int tag "hacked" of nbt of {_p}'s tool
        make gui slot 15 with end portal frame named "&aHacked" with lore ("&8Enchant", "", " &f→ This enchant has the chance", " &f→ to give tokens while mining.", "", " &f→ Level &a%{_lure}%&7/&c10", "", " &f→ &fCost &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*200)%", "", "&7Click to enchant"):
            if {_lure} >= 10:
                send "{@prefix} You can't buy this Hacked upgrade" to {_p}
                close inventory of {_p}
            else if {tokens::%uuid of {_p}%}+0 >= ({_lure}+1)*200:
                set int tag "hacked" of nbt of {_p}'s tool to ({_lure})+1
                set line 7 of lore of {_p}'s tool to " &f→ &aHacked %{_lure}+1%"
                remove (({_lure}+1)*200) from {tokens::%uuid of {_p}%}
                close inventory of {_p}
                send "{@prefix} You have upgraded your Hacked enchant!" to {_p}
            else:
                send "{@prefix} You need &e%fontimage "fonts:star_icon"%&e%format(({_lure}+1)*200)% &fTokens to buy this Hacked upgrade" to {_p}
                close inventory of {_p}
    open last gui to {_p}

function level_Check_F(p: player):
    if {foraging::xp::%uuid of {_p}%} >= ({foraging::needed_xp::%uuid of {_p}%}):
        add 50 to {foraging::needed_xp::%uuid of {_p}%}
        set {foraging::xp::%uuid of {_p}%} to 0
        send title "&2☝&a☝&f☝ LEVEL-UP! &f☝&a☝&2☝" with subtitle "&c🪓%{foraging::level::%uuid of {_p}%}+0% &7to &a🪓%{foraging::level::%uuid of {_p}%}+1%" to {_p}
        add 1 to {foraging::level::%uuid of {_p}%}
        if mod({foraging::level::%uuid of {_p}%}, 5) = 0:
            add 1 to {-gen::placed::%{_p}%}
        play sound "ui.toast.challenge_complete" with volume 0.5 to {_p}
    else:
        set {_needed_xp} to {foraging::needed_xp::%uuid of {_p}%}
        set {_xp} to {foraging::xp::%uuid of {_p}%}+0
        send action bar "&8[ &a%{_xp}%&7/&a%{_needed_xp}% &8]" to {_p}

on break of dark oak wood block or acacia wood block:
    world = "SkyLand"
    name of player's tool contains "🪓"
    clear drops
    set {_block} to type of event-block
    if {foraging_warped::%uuid of player%} is set:
        chance of 1%:
            add (random integer between 10 and 50) to {foraging::xp::%uuid of player%}
            send "{@prefix} That block was warped with EXP!" to player
    if chance of (int tag "hacked" of nbt of player's tool)/2.5%:
        set {_token} to (random integer between 250 and 1000) * {booster_tokens}
        add {_token} to {tokens::%uuid of player%}
        chance of 25%:
            send "{@prefix} Hacking pays off sometimes for &e%fontimage "fonts:star_icon"%&e%{_token}%" to player
    else if chance of (int tag "crate" of nbt of player's tool)/40%:
        set {_crate} to "common"
        execute console command "crate add %{_crate}% %player% 1"
        send "{@prefix} You have broken the crate wide open!" to player
    else if chance of (int tag "flowering" of nbt of player's tool/3)%:
        set event-block to {_block}
        send "{@prefix} A Flowering Season just gave back the block!" to player
    else if chance of (int tag "tumble" of nbt of player's tool/6)%:
        set {_multi} to true
        send "{@prefix} A Tumble came through and gave double tokens!" to player
    if type of event-block = dark oak wood block:
        add (1.1 * {booster_exp} * ({pets::booster_XP::%uuid of player%}+1)) to {foraging::xp::%uuid of player%}
        if {_multi} is not set:
            add (random number between 15 and 25) * {booster_tokens} to {tokens::%uuid of player%}
        else:
            add (random number between 30 and 50) * {booster_tokens} to {tokens::%uuid of player%}
    else if type of event-block = acacia wood block:
        if {foraging::level::%uuid of player%} >= 25:
            add (1.5 * {booster_exp} * ({pets::booster_XP::%uuid of player%}+1)) to {foraging::xp::%uuid of player%}
            if {_multi} is not set:
                add (random number between 20 and 30) * {booster_tokens} to {tokens::%uuid of player%}
            else:
                add (random number between 40 and 60) * {booster_tokens} to {tokens::%uuid of player%}
        else:
            cancel event
            send "{@prefix} You can't mine this yet! Come back at level 25!" to player
            stop
    level_Check_F(player)
    set event-block to bedrock
    wait 5 seconds
    set location of event-block to {_block}

on right click on anvil:
	cancel event
	name of player's tool contains "🪓"
	location of event-block is {axe_upgrade}
	axe_Upgrade(player)